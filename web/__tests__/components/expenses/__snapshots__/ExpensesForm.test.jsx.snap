// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExpensesForm Component should render component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExpensesForm
    amount=""
    changeExpensesFormValues={[MockFunction]}
    description=""
    expenses={Array []}
    onChange={[MockFunction]}
    onRegisterExpenses={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <input
            name="description"
            onChange={[MockFunction]}
            value=""
          />
        </div>,
        <div>
          <input
            name="amount"
            onChange={[MockFunction]}
            value=""
          />
        </div>,
        <button
          onClick={[MockFunction]}
          type="button"
        >
          Register Expenses
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            name="description"
            onChange={[MockFunction]}
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "description",
            "onChange": [MockFunction],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            name="amount"
            onChange={[MockFunction]}
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "amount",
            "onChange": [MockFunction],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Register Expenses",
          "onClick": [MockFunction],
          "type": "button",
        },
        "ref": null,
        "rendered": "Register Expenses",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <input
              name="description"
              onChange={[MockFunction]}
              value=""
            />
          </div>,
          <div>
            <input
              name="amount"
              onChange={[MockFunction]}
              value=""
            />
          </div>,
          <button
            onClick={[MockFunction]}
            type="button"
          >
            Register Expenses
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              name="description"
              onChange={[MockFunction]}
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "description",
              "onChange": [MockFunction],
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              name="amount"
              onChange={[MockFunction]}
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "amount",
              "onChange": [MockFunction],
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Register Expenses",
            "onClick": [MockFunction],
            "type": "button",
          },
          "ref": null,
          "rendered": "Register Expenses",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
